// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Caml_obj = require("bs-platform/lib/js/caml_obj.js");
var Caml_array = require("bs-platform/lib/js/caml_array.js");

function tail(arr, n) {
  return $$Array.sub(arr, n, arr.length - n | 0);
}

function find(_arr, n) {
  while(true) {
    var arr = _arr;
    var i = arr.length;
    if (i !== 0) {
      var match = Caml_obj.caml_compare(Caml_array.caml_array_get(arr, i / 2 | 0), n);
      switch (match) {
        case -1 :
            var match$1 = find(tail(arr, (i / 2 | 0) + 1 | 0), n);
            if (match$1 !== undefined) {
              return match$1 + ((i / 2 | 0) + 1 | 0) | 0;
            } else {
              return ;
            }
        case 0 :
            return i / 2 | 0;
        case 1 :
            _arr = $$Array.sub(arr, 0, i / 2 | 0);
            continue ;
        default:
          return ;
      }
    } else {
      return ;
    }
  };
}

exports.find = find;
/* No side effect */
